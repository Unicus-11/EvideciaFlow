-- figures.db - Database schema for Figure Fixer feature

-- Table to store publication types and their figure requirements
CREATE TABLE publication_requirements (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    publication_type TEXT NOT NULL, -- 'journal', 'conference', 'thesis', 'custom'
    publication_name TEXT NOT NULL, -- e.g., 'Nature', 'ACM CHI', 'Master's Thesis'
    category TEXT, -- e.g., 'International Journals', 'Computer Science', 'Medicine'
    requirements TEXT NOT NULL, -- Detailed figure requirements
    file_formats TEXT NOT NULL, -- Accepted formats: 'PDF,PNG,TIFF'
    min_dpi INTEGER DEFAULT 300,
    color_mode TEXT, -- 'RGB', 'CMYK', 'RGB/CMYK'
    max_file_size_mb INTEGER DEFAULT 50,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table to store user-uploaded figures
CREATE TABLE uploaded_figures (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER, -- Reference to users table
    session_id TEXT, -- For anonymous users
    original_filename TEXT NOT NULL,
    file_path TEXT NOT NULL,
    file_format TEXT NOT NULL,
    file_size_kb INTEGER,
    upload_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status TEXT DEFAULT 'uploaded', -- 'uploaded', 'processing', 'fixed', 'error'
    publication_type TEXT,
    publication_name TEXT,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Table to store figure analysis results
CREATE TABLE figure_analysis (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    figure_id INTEGER NOT NULL,
    current_dpi INTEGER,
    current_format TEXT,
    current_color_mode TEXT,
    current_dimensions TEXT, -- 'width x height'
    issues_found TEXT, -- JSON array of issues
    compliance_score REAL, -- 0-100 score
    analysis_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (figure_id) REFERENCES uploaded_figures(id)
);

-- Table to store fixed/processed figures
CREATE TABLE fixed_figures (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    original_figure_id INTEGER NOT NULL,
    fixed_filename TEXT NOT NULL,
    fixed_file_path TEXT NOT NULL,
    fixes_applied TEXT, -- JSON array of fixes applied
    final_dpi INTEGER,
    final_format TEXT,
    final_color_mode TEXT,
    final_dimensions TEXT,
    processing_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    download_count INTEGER DEFAULT 0,
    FOREIGN KEY (original_figure_id) REFERENCES uploaded_figures(id)
);

-- Table to store custom requirements from users
CREATE TABLE custom_requirements (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    session_id TEXT,
    custom_text TEXT NOT NULL,
    parsed_requirements TEXT, -- JSON of parsed requirements
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Table to track figure processing jobs/queue
CREATE TABLE processing_jobs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    figure_id INTEGER NOT NULL,
    job_status TEXT DEFAULT 'pending', -- 'pending', 'processing', 'completed', 'failed'
    job_type TEXT NOT NULL, -- 'format_conversion', 'dpi_adjustment', 'color_correction', etc.
    parameters TEXT, -- JSON of processing parameters
    error_message TEXT,
    started_at TIMESTAMP,
    completed_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (figure_id) REFERENCES uploaded_figures(id)
);

-- Insert initial publication requirements data
INSERT INTO publication_requirements (publication_type, publication_name, category, requirements, file_formats, min_dpi, color_mode) VALUES

-- Journal requirements
('journal', 'Nature', 'International Journals', 'PDF/PNG/TIFF; ≥300 dpi; RGB/CMYK; follow Nature figure style guidelines; clear legends and readable fonts.', 'PDF,PNG,TIFF', 300, 'RGB/CMYK'),
('journal', 'Science', 'International Journals', 'PDF/PNG/TIFF; ≥300 dpi; RGB; adhere to Science figure style; ensure font readability.', 'PDF,PNG,TIFF', 300, 'RGB'),
('journal', 'Cell', 'International Journals', 'PDF/PNG/TIFF; ≥300 dpi; RGB/CMYK; include scale bars and clear legends; follow Cell submission rules.', 'PDF,PNG,TIFF', 300, 'RGB/CMYK'),
('journal', 'The Lancet', 'International Journals', 'PDF/PNG/TIFF; ≥300 dpi; RGB; high-resolution figures with clear labeling.', 'PDF,PNG,TIFF', 300, 'RGB'),
('journal', 'New England Journal of Medicine', 'International Journals', 'PDF/PNG/TIFF; ≥300 dpi; RGB; clear legends and appropriate font size.', 'PDF,PNG,TIFF', 300, 'RGB'),

-- Conference requirements
('conference', 'ACM CHI', 'Computer Science', 'PDF/PNG; ≥300 dpi; RGB; follow ACM CHI figure guidelines; readable fonts and clear labels.', 'PDF,PNG', 300, 'RGB'),
('conference', 'IEEE ICCV', 'Computer Science', 'PDF/PNG/TIFF; ≥300 dpi; RGB; follow IEEE figure guidelines.', 'PDF,PNG,TIFF', 300, 'RGB'),
('conference', 'NeurIPS', 'Computer Science', 'PDF/PNG; ≥300 dpi; RGB; legible fonts and clear diagrams.', 'PDF,PNG', 300, 'RGB'),
('conference', 'American Medical Association', 'Medicine', 'PDF/PNG/TIFF; ≥300 dpi; RGB; ensure clarity and proper labeling.', 'PDF,PNG,TIFF', 300, 'RGB'),

-- Thesis requirements
('thesis', 'Master''s Thesis', 'Academic', 'PDF/PNG/TIFF; ≥300 dpi; RGB; follow department template; include legends, labels, scale bars if needed.', 'PDF,PNG,TIFF', 300, 'RGB'),
('thesis', 'PhD Thesis', 'Academic', 'PDF/PNG/TIFF; ≥300 dpi; RGB/CMYK; follow institution thesis guidelines.', 'PDF,PNG,TIFF', 300, 'RGB/CMYK'),
('thesis', 'Institution-Specific', 'Academic', 'PDF/PNG/TIFF; ≥300 dpi; RGB; follow specific institution formatting requirements.', 'PDF,PNG,TIFF', 300, 'RGB');

-- Create indexes for better performance
CREATE INDEX idx_uploaded_figures_user ON uploaded_figures(user_id);
CREATE INDEX idx_uploaded_figures_session ON uploaded_figures(session_id);
CREATE INDEX idx_uploaded_figures_status ON uploaded_figures(status);
CREATE INDEX idx_figure_analysis_figure ON figure_analysis(figure_id);
CREATE INDEX idx_fixed_figures_original ON fixed_figures(original_figure_id);
CREATE INDEX idx_processing_jobs_figure ON processing_jobs(figure_id);
CREATE INDEX idx_processing_jobs_status ON processing_jobs(job_status);
CREATE INDEX idx_publication_requirements_type ON publication_requirements(publication_type, publication_name);
