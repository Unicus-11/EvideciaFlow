-- users.db - Simplified user management for research platform prototype

-- Basic users table (optional registration)
CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT UNIQUE,
    email TEXT UNIQUE,
    password_hash TEXT,
    full_name TEXT,
    institution TEXT,
    academic_level TEXT, -- 'undergraduate', 'graduate', 'postdoc', 'faculty', 'researcher'
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_login TIMESTAMP
);

-- Anonymous sessions (main way users interact)
CREATE TABLE sessions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    session_id TEXT UNIQUE NOT NULL,
    user_id INTEGER, -- NULL for anonymous sessions
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_activity TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- User preferences (remember their choices)
CREATE TABLE user_preferences (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    session_id TEXT, -- For anonymous users
    preferred_language TEXT DEFAULT 'American English',
    default_publication_type TEXT DEFAULT 'journal',
    preferred_citation_style TEXT DEFAULT 'APA',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Track what users upload
CREATE TABLE upload_history (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    session_id TEXT,
    file_type TEXT NOT NULL, -- 'research_paper', 'figure', 'protocol'
    original_filename TEXT NOT NULL,
    file_size_mb REAL,
    feature_used TEXT, -- 'explain_rewrite', 'figure_fixer', 'protocol_optimizer', etc.
    upload_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    processing_status TEXT DEFAULT 'uploaded', -- 'uploaded', 'processing', 'completed', 'failed'
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Basic activity tracking
CREATE TABLE user_activity (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    session_id TEXT,
    activity_type TEXT NOT NULL, -- 'upload', 'process', 'download', 'rewrite'
    feature_used TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Simple daily usage stats
CREATE TABLE usage_stats (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    session_id TEXT,
    date DATE NOT NULL,
    feature_explain_rewrite INTEGER DEFAULT 0,
    feature_protocol_optimizer INTEGER DEFAULT 0,
    feature_figure_fixer INTEGER DEFAULT 0,
    feature_citation_context INTEGER DEFAULT 0,
    feature_idea_recombinator INTEGER DEFAULT 0,
    feature_contradiction_detector INTEGER DEFAULT 0,
    total_uploads INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id),
    UNIQUE(user_id, date),
    UNIQUE(session_id, date)
);

-- Create essential indexes
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_sessions_session_id ON sessions(session_id);
CREATE INDEX idx_sessions_user_id ON sessions(user_id);
CREATE INDEX idx_user_prefs_user ON user_preferences(user_id);
CREATE INDEX idx_user_prefs_session ON user_preferences(session_id);
CREATE INDEX idx_upload_history_session ON upload_history(session_id);
CREATE INDEX idx_activity_session ON user_activity(session_id);
CREATE INDEX idx_usage_stats_session_date ON usage_stats(session_id, date);

-- Simple trigger to update preferences timestamp
CREATE TRIGGER update_preferences_timestamp 
    AFTER UPDATE ON user_preferences
    FOR EACH ROW
    BEGIN
        UPDATE user_preferences SET updated_at = CURRENT_TIMESTAMP WHERE id = NEW.id;
    END;

